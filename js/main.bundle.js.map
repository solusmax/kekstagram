{"version":3,"sources":["webpack://kekstagram/./source/js/render-preview.js","webpack://kekstagram/./source/js/util.js","webpack://kekstagram/./source/js/modal.js","webpack://kekstagram/./source/js/scale.js","webpack://kekstagram/./source/js/effects.js","webpack://kekstagram/./source/js/hashtags-validation.js","webpack://kekstagram/./source/js/description-validation.js","webpack://kekstagram/./source/js/data.js","webpack://kekstagram/./source/js/upload-picture.js","webpack://kekstagram/./source/js/comments.js","webpack://kekstagram/./source/js/big-picture.js","webpack://kekstagram/./source/js/gallery.js","webpack://kekstagram/./source/js/sort.js","webpack://kekstagram/./source/js/main.js"],"names":["previewImgNode","document","querySelector","pictureLoaderTemplateNode","content","renderPicturePreview","pictureUrl","src","errorMessageTemplateNode","isStringFit","string","maxLength","length","isEscEvent","evt","key","showErrorMessage","message","timer","errorMessageNode","cloneNode","textContent","body","appendChild","setTimeout","remove","clearFormField","field","value","onModalCloseClickWrapper","onModalEscKeydownWrapper","openModal","modalNode","closeNode","specialModal","classList","add","isUploadFieldInFocus","preventDefault","closeModal","onModalEscKeydown","onModalCloseClick","addEventListener","removeEventListener","resetUploadSettings","uploadModalNode","scaleMinusNode","scalePlusNode","scaleValueNode","currentScaleValue","renderScale","scaleValue","style","transform","Effects","ORIGINAL","FILTER","CHROME","MIN","MAX","STEP","DEFAULT_VALUE","SEPIA","MARVIN","UNIT","PHOBOS","HEAT","sliderWrapperNode","sliderNode","effectRadioButtons","querySelectorAll","effectLevelValueNode","currentEffectClass","removeSlider","noUiSlider","destroy","resetPictureEffect","contains","filter","renderEffect","effectName","effectValues","toUpperCase","filterName","unit","min","max","step","defaultValue","getEffectValues","getEffectClass","setEffectClass","setEffectLevelNodeAttributes","updateOptions","range","set","updateSliderOptions","off","create","start","connect","createSlider","on","values","handle","onSliderUpdate","renderSlider","forEach","effectRadioNode","hashtagsFieldNode","checkAllHashtags","validationFunction","hashtags","item","isItHashtag","isHashtagLongEnough","hashtag","isHashtagFit","isHashtagTextValid","slice","getHashtagText","search","errorCheckers","Map","previousHashtags","hashtagLowercased","toLowerCase","includes","push","hashtagsString","trim","validity","customError","reportNoValidationError","split","errorMessage","entries","reportValidationError","ERROR_BORDER_STYLE","descriptionFieldNode","description","isDescriptionFit","submitButtonNode","initialSubmitButtonText","PICTURE_FILE_TYPES","uploadForm","uploadButtonNode","closeButtonNode","mainNode","resetUploadValue","borderStyle","border","setCustomValidity","reportValidity","target","checked","onMessageInnerClick","stopPropagation","onMessageEscKeydownWrapper","hideResultMessage","messageNode","showResultMessage","result","messageInnerNode","messageOkayButtonNode","onMessageEscKeydown","onMessageOkayButtonClick","onMessageClick","chosenPicture","files","chosenPictureName","name","pictureName","some","fileType","endsWith","picture","pictureLoaderNode","showPictureLoader","Promise","resolve","reader","FileReader","readAsDataURL","then","uploadFormData","FormData","onSuccess","onError","disabled","fetch","method","response","ok","Error","catch","finally","sendPhotoData","commentsNode","commentTemplateNode","commentsLoaderButtonNode","shownCommentsCounterNode","shownComments","createComment","avatar","commentNode","commentAvatarNode","commentMessageNode","alt","onCommentsLoaderClickWrapper","hideCommentsLoader","renderPieceOfComments","comments","commentsNumberInPiece","remainingComments","Math","commentsFragment","createDocumentFragment","i","shift","bigPictureNode","imgNode","descriptionNode","likesCounterNode","commentsCounterNode","setPicturesListeners","picturesData","pictureNode","index","url","likes","renderBigPicture","firstChild","clearComments","currentComments","commentsNumber","onCommentsLoaderClick","renderComments","picturesNode","pictureTemplateNode","renderPictures","pictures","picturesFragment","updatePictures","sortButtonsNode","sortButtonActiveClassName","getPictureCommentsCount","comparePicturesByComments","pictureA","pictureB","commentsCountA","sortOrders","sortedPictures","_","shuffle","sort","currentSortOrder","Object","keys","getSortButtonSelector","sortOrder","setSortButtonActiveClass","activeSortButtonNode","cb","sortButtonNode","setSortButtonsListeners","debounce","order","sortGallery","json","photos","err"],"mappings":"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","file":"main.bundle.js","sourcesContent":["const DEFAULT_IMAGE_URL = 'img/upload-default-image.jpg';\n\nconst previewImgNode = document.querySelector('.img-upload__preview img');\nconst pictureLoaderTemplateNode = document.querySelector('#messages')\n  .content\n  .querySelector('.img-upload__message');\n\nconst renderPicturePreview = (pictureUrl) => {\n  previewImgNode.src = pictureUrl;\n}\n\nconst resetPicturePreview = () => {\n  renderPicturePreview(DEFAULT_IMAGE_URL);\n}\n\nconst showPictureLoader = () => {\n  const pictureLoaderNode = pictureLoaderTemplateNode.cloneNode(true);\n  document.body.appendChild(pictureLoaderNode);\n}\n\nconst hidePictureLoader = () => {\n  const pictureLoaderNode = document.querySelector('.img-upload__message');\n  pictureLoaderNode.remove();\n}\n\nconst loadChosenPicture = (picture) => {\n  return new Promise ((resolve) => {\n    const reader = new FileReader();\n\n    reader.addEventListener('load', () => {\n      renderPicturePreview(reader.result);\n      resolve();\n    });\n\n    reader.readAsDataURL(picture);\n  })\n}\n\nexport {\n  resetPicturePreview,\n  showPictureLoader,\n  hidePictureLoader,\n  loadChosenPicture\n}\n","const errorMessageTemplateNode = document.querySelector('#error-alert')\n  .content\n  .querySelector('.error-alert');\n\n// Проверка, не превышает ли строка максимальное количество символов\n\nconst isStringFit = (string, maxLength) => string.length <= maxLength;\n\n// Проверка нажатия клавиши Esc\n\nconst isEscEvent = (evt) => evt.key === 'Escape';\n\n// Перевести десятичную дробь в строку с процентами\n\nconst convertDecimalToPercent = (numberValue) => (numberValue * 100) + '%';\n\n// Проверка, содержит ли строка исключительно whitespace\n\nconst isStringEmpty = (string) => string.trim() === '';\n\n// Показать сообщение об ошибке\n\nconst showErrorMessage = (message, timer) => {\n  const errorMessageNode = errorMessageTemplateNode.cloneNode(true);\n\n  errorMessageNode.querySelector('.error-alert__title').textContent = message;\n\n  document.body.appendChild(errorMessageNode);\n\n  if (timer) {\n    setTimeout(() => {\n      errorMessageNode.remove();\n    }, timer)\n  }\n}\n\n// Очистить поле формы\n\nconst clearFormField = (field) => {\n  field.value = '';\n}\n\nexport {\n  isStringFit,\n  isEscEvent,\n  convertDecimalToPercent,\n  isStringEmpty,\n  showErrorMessage,\n  clearFormField\n};\n","import { isEscEvent } from './util.js';\nimport { resetUploadSettings, isUploadFieldInFocus } from './upload-picture.js';\n\nconst onModalCloseClick = (modalNode, closeNode, specialModal) => {\n  return () => {\n    closeModal(modalNode, closeNode, specialModal);\n  }\n};\n\nlet onModalCloseClickWrapper;\n\nconst onModalEscKeydown = (modalNode, closeNode, specialModal) => {\n  return (evt) => {\n    if (isEscEvent(evt) && !isUploadFieldInFocus(evt)) {\n      evt.preventDefault();\n\n      closeModal(modalNode, closeNode, specialModal);\n    }\n  }\n}\n\nlet onModalEscKeydownWrapper;\n\nconst openModal = (modalNode, closeNode, specialModal) => {\n  modalNode.classList.remove('hidden');\n  document.body.classList.add('modal-open');\n\n  onModalEscKeydownWrapper = onModalEscKeydown(modalNode, closeNode, specialModal)\n  onModalCloseClickWrapper = onModalCloseClick(modalNode, closeNode, specialModal);\n\n  closeNode.addEventListener('click', onModalCloseClickWrapper);\n  document.addEventListener('keydown',onModalEscKeydownWrapper);\n}\n\nconst closeModal = (modalNode, closeNode, specialModal) => {\n  modalNode.classList.add('hidden');\n  document.body.classList.remove('modal-open');\n\n  closeNode.removeEventListener('click', onModalCloseClickWrapper);\n  document.removeEventListener('keydown', onModalEscKeydownWrapper);\n\n  if (specialModal === 'upload') {\n    resetUploadSettings();\n  }\n}\n\nexport {\n  openModal,\n  closeModal\n}\n","import { convertDecimalToPercent } from './util.js';\n\nconst ScaleSettings = {\n  MIN: 0.25,\n  MAX: 1,\n  STEP: 0.25,\n  DEFAULT: 1,\n}\n\nconst uploadModalNode = document.querySelector('.img-upload__overlay');\nconst previewImgNode = uploadModalNode.querySelector('.img-upload__preview img');\nconst scaleMinusNode = uploadModalNode.querySelector('.scale__control--smaller');\nconst scalePlusNode = uploadModalNode.querySelector('.scale__control--bigger');\nconst scaleValueNode = uploadModalNode.querySelector('.scale__control--value');\n\nlet currentScaleValue = ScaleSettings.DEFAULT;\n\nconst renderScale = (scaleValue) => {\n  scaleValueNode.value = convertDecimalToPercent(scaleValue);\n  previewImgNode.style.transform = `scale(${scaleValue})`;\n};\n\nscaleMinusNode.addEventListener('click', () => {\n  if (currentScaleValue > ScaleSettings.MIN) {\n    currentScaleValue -= ScaleSettings.STEP;\n    renderScale(currentScaleValue);\n  }\n});\n\nscalePlusNode.addEventListener('click', () => {\n  if (currentScaleValue < ScaleSettings.MAX) {\n    currentScaleValue += ScaleSettings.STEP;\n    renderScale(currentScaleValue);\n  }\n});\n\nconst resetScale = () => {\n  currentScaleValue = ScaleSettings.DEFAULT;\n  renderScale(currentScaleValue);\n}\n\nexport {\n  resetScale\n}\n","/* global noUiSlider:readonly */\n\nconst Effects = {\n  ORIGINAL: {\n    FILTER: 'none',\n  },\n  CHROME: {\n    FILTER: 'grayscale',\n    MIN: 0,\n    MAX: 1,\n    STEP: 0.1,\n    DEFAULT_VALUE: 1,\n  },\n  SEPIA: {\n    FILTER: 'sepia',\n    MIN: 0,\n    MAX: 1,\n    STEP: 0.1,\n    DEFAULT_VALUE: 1,\n  },\n  MARVIN: {\n    FILTER: 'invert',\n    UNIT: '%',\n    MIN: 0,\n    MAX: 100,\n    STEP: 1,\n    DEFAULT_VALUE: 100,\n  },\n  PHOBOS: {\n    FILTER: 'blur',\n    UNIT: 'px',\n    MIN: 0,\n    MAX: 3,\n    STEP: 0.1,\n    DEFAULT_VALUE: 3,\n  },\n  HEAT: {\n    FILTER: 'brightness',\n    MIN: 1,\n    MAX: 3,\n    STEP: 0.1,\n    DEFAULT_VALUE: 3,\n  },\n}\n\nconst uploadModalNode = document.querySelector('.img-upload__overlay');\nconst previewImgNode = uploadModalNode.querySelector('.img-upload__preview img');\nconst sliderWrapperNode = uploadModalNode.querySelector('.effect-level');\nconst sliderNode = sliderWrapperNode.querySelector('.effect-level__slider');\nconst effectRadioButtons = uploadModalNode.querySelectorAll('.effects__radio');\nconst effectLevelValueNode = uploadModalNode.querySelector('.effect-level__value');\n\nlet currentEffectClass;\n\nconst onEffectRadioChange = (effectName) => {\n  return () => {\n    resetPictureEffect();\n\n    if (effectName === Effects.ORIGINAL.FILTER) {\n      removeSlider();\n    } else {\n      renderEffect(effectName);\n    }\n  }\n}\n\nconst onSliderUpdate = ({ filterName, unit }) => {\n  return (values, handle) => {\n    effectLevelValueNode.value = values[handle];\n    previewImgNode.style.filter = `${filterName}(${effectLevelValueNode.value}${unit})`;\n  }\n}\n\nconst createSlider = ({ min, max, step, defaultValue }) => {\n  noUiSlider.create(sliderNode, {\n    range: {\n      'min': [min],\n      'max': [max],\n    },\n    step: step,\n    start: [defaultValue],\n    connect: 'lower',\n  });\n\n  sliderWrapperNode.classList.remove('hidden');\n}\n\nconst updateSliderOptions = ({ min, max, step, defaultValue }) => {\n  sliderNode.noUiSlider.updateOptions({\n    range: {\n      'min': [min],\n      'max': [max],\n    },\n    step: step,\n  });\n\n  sliderNode.noUiSlider.set(defaultValue);\n}\n\nconst removeSlider = () => {\n  if (sliderNode.noUiSlider) {\n    sliderNode.noUiSlider.destroy();\n  }\n\n  sliderWrapperNode.classList.add('hidden');\n}\n\nconst resetPictureEffect = () => {\n  if (previewImgNode.classList.contains(currentEffectClass)) {\n    previewImgNode.classList.remove(currentEffectClass);\n  }\n\n  previewImgNode.style.filter = Effects.ORIGINAL.FILTER;\n  effectLevelValueNode.value = null;\n}\n\nconst resetEffectRadioButtons = () => {\n  effectRadioButtons[0].checked = true;\n}\n\nconst getEffectValues = (effectName) => {\n  const effectValues = Effects[effectName.toUpperCase()];\n\n  return {\n    filterName: effectValues.FILTER,\n    unit: effectValues.UNIT ? effectValues.UNIT : '',\n    min: effectValues.MIN,\n    max: effectValues.MAX,\n    step: effectValues.STEP,\n    defaultValue: effectValues.DEFAULT_VALUE,\n  }\n}\n\nconst getEffectClass = (effectName) => `effects__preview--${effectName}`;\n\nconst setEffectClass = (effectName) => {\n  currentEffectClass = getEffectClass(effectName);\n\n  previewImgNode.classList.add(currentEffectClass);\n}\n\nconst setEffectLevelNodeAttributes = ({ min, max, step, defaultValue }) => {\n  effectLevelValueNode.min = min;\n  effectLevelValueNode.max = max;\n  effectLevelValueNode.step = step;\n  effectLevelValueNode.value = defaultValue;\n}\n\nconst renderSlider = (effectValues) => {\n  if (!sliderNode.noUiSlider) {\n    createSlider(effectValues);\n  } else {\n    updateSliderOptions(effectValues);\n    sliderNode.noUiSlider.off('update');\n  }\n\n  sliderNode.noUiSlider.on('update', onSliderUpdate(effectValues));\n}\n\nconst renderEffect = (effectName) => {\n  const effectValues = getEffectValues(effectName);\n\n  setEffectClass(effectName);\n  setEffectLevelNodeAttributes(effectValues);\n  renderSlider(effectValues);\n}\n\neffectRadioButtons.forEach((effectRadioNode) => {\n  effectRadioNode.addEventListener('change', onEffectRadioChange(effectRadioNode.value));\n});\n\nexport {\n  removeSlider,\n  resetPictureEffect,\n  resetEffectRadioButtons\n}\n","import { isStringFit, isStringEmpty } from './util.js';\nimport { reportValidationError, reportNoValidationError, ERROR_BORDER_STYLE } from './upload-picture.js';\n\nconst HashtagsSettings = {\n  MAX_NUMBER: 5,\n  MAX_LENGTH: 20,\n}\n\nconst uploadFormNode = document.querySelector('.img-upload__form');\nconst hashtagsFieldNode = uploadFormNode.querySelector('.text__hashtags');\n\nconst onHashtagsFieldChange = () => {\n  const hashtagsString = hashtagsFieldNode.value;\n\n  if (isStringEmpty(hashtagsString)) {\n    if (hashtagsFieldNode.validity.customError) {\n      reportNoValidationError(hashtagsFieldNode);\n    }\n\n    return;\n  }\n\n  const hashtags = getHashtags(hashtagsString);\n\n  for (const [validationFunction, errorMessage] of errorCheckers.entries()) {\n    if (!validationFunction(hashtags)) {\n      reportValidationError(hashtagsFieldNode, errorMessage, ERROR_BORDER_STYLE);\n      return;\n    }\n\n    reportNoValidationError(hashtagsFieldNode);\n  }\n}\n\nconst getHashtags = (string) => string.trim().split(/[\\s]+/);\n\nconst getHashtagText = (hashtag) => hashtag.slice(1);\n\nconst checkAllHashtags = (validationFunction, hashtags) => {\n  for (const item of hashtags) {\n    if (!validationFunction(item)) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nconst isItHashtag = (string) => string[0] === '#';\nconst areTheseHashtags = (hashtags) => checkAllHashtags(isItHashtag, hashtags);\n\nconst isHashtagLongEnough = (hashtag) => hashtag.length > 1;\nconst areHashtagsLongEnough = (hashtags) => checkAllHashtags(isHashtagLongEnough, hashtags);\n\nconst isHashtagFit = (hashtag) => isStringFit(hashtag, HashtagsSettings.MAX_LENGTH);\nconst areHashtagsFit = (hashtags) => checkAllHashtags(isHashtagFit, hashtags);\n\nconst isHashtagTextValid = (hashtag) => getHashtagText(hashtag).search(/[\\p{P}\\p{S}]/u) === -1;\nconst areHashtagsTextsValid = (hashtags) => checkAllHashtags(isHashtagTextValid, hashtags);\n\nconst isHashtagsNumberNotExceed = (hashtags) => hashtags.length <= HashtagsSettings.MAX_NUMBER;\n\nconst areHashtagsUnique = (hashtags) => {\n  const previousHashtags = [];\n\n  for (const hashtag of hashtags) {\n    const hashtagLowercased = hashtag.toLowerCase();\n\n    if (previousHashtags.includes(hashtagLowercased)) {\n      return false;\n    }\n\n    previousHashtags.push(hashtagLowercased);\n  }\n\n  return true;\n}\n\nconst errorCheckers = new Map([\n  [areTheseHashtags, 'Хештег должен начинаться с #'],\n  [areHashtagsLongEnough, 'Добавьте текст хештега после символа #'],\n  [areHashtagsTextsValid, 'Хештег может содержать только буквы и цифры'],\n  [areHashtagsFit, `В хештеге количество символов (включая #) не должно быть больше ${HashtagsSettings.MAX_LENGTH}`],\n  [areHashtagsUnique, 'Хештеги не должны повторяться'],\n  [isHashtagsNumberNotExceed, `Хештегов не должно быть больше ${HashtagsSettings.MAX_NUMBER}`],\n]);\n\nhashtagsFieldNode.addEventListener('change', onHashtagsFieldChange);\n\nexport {\n  hashtagsFieldNode\n}\n","import { isStringFit } from './util.js';\nimport { reportValidationError, reportNoValidationError, ERROR_BORDER_STYLE } from './upload-picture.js';\n\nconst MAX_DESCRIPTION_LENGTH = 140;\nconst TOO_LONG_ERROR_MESSAGE = `Максимальная количество символов в комментарии — ${MAX_DESCRIPTION_LENGTH}`;\n\nconst uploadFormNode = document.querySelector('.img-upload__form');\nconst descriptionFieldNode = uploadFormNode.querySelector('.text__description');\n\ndescriptionFieldNode.maxLength = MAX_DESCRIPTION_LENGTH;\n\nconst onDescriptionFieldInput = () => {\n  const description = descriptionFieldNode.value;\n\n  if (!isDescriptionFit(description)) {\n    reportValidationError(descriptionFieldNode, TOO_LONG_ERROR_MESSAGE, ERROR_BORDER_STYLE);\n  } else {\n    reportNoValidationError(descriptionFieldNode);\n  }\n}\n\nconst isDescriptionFit = (description) => isStringFit(description, MAX_DESCRIPTION_LENGTH);\n\ndescriptionFieldNode.addEventListener('input', onDescriptionFieldInput);\n\nexport {\n  descriptionFieldNode\n}\n","import { showErrorMessage } from './util.js';\n\nconst PHOTOS_DATA_URL = 'https://22.javascript.pages.academy/kekstagram/data';\nconst SENDING_PHOTO_URL = 'https://22.javascript.pages.academy/kekstagram';\nconst Messages = {\n  SENDING: 'Отправка...',\n  LOADING_ERROR: 'Ошибка загрузки изображений',\n  SENDING_ERROR: 'Ошибка загрузки файла',\n}\n\nconst submitButtonNode = document.querySelector('#upload-submit');\n\nlet initialSubmitButtonText;\n\nconst getPhotosData = (onSuccess) => {\n  fetch(PHOTOS_DATA_URL)\n    .then((response) => {\n      if (response.ok) {\n        return response.json()\n      }\n\n      throw new Error(Messages.LOADING_ERROR);\n    })\n    .then((photos) => {\n      onSuccess(photos);\n    })\n    .catch((err) => {\n      showErrorMessage(err.message);\n    });\n}\n\nconst showSendingMessageOnSubmitButton = () => {\n  initialSubmitButtonText = submitButtonNode.textContent;\n  submitButtonNode.textContent = Messages.SENDING;\n  submitButtonNode.disabled = true;\n}\n\nconst resetSubmitButton = () => {\n  submitButtonNode.textContent = initialSubmitButtonText;\n  submitButtonNode.disabled = false;\n}\n\nconst sendPhotoData = (onSuccess, onError, body) => {\n  showSendingMessageOnSubmitButton();\n\n  fetch(SENDING_PHOTO_URL, {\n    method: 'POST',\n    body,\n  })\n    .then((response) => {\n      if (response.ok) {\n        onSuccess();\n      } else {\n        throw new Error(Messages.SENDING_ERROR);\n      }\n    })\n    .catch(() => {\n      onError();\n    })\n    .finally(() => {\n      resetSubmitButton();\n    });\n}\n\nexport {\n  getPhotosData,\n  sendPhotoData\n}\n","import { resetPicturePreview, showPictureLoader, hidePictureLoader, loadChosenPicture } from './render-preview.js';\nimport { openModal, closeModal } from './modal.js';\nimport { resetScale } from './scale.js';\nimport { removeSlider, resetPictureEffect, resetEffectRadioButtons } from './effects.js';\nimport { hashtagsFieldNode } from './hashtags-validation.js';\nimport { descriptionFieldNode } from './description-validation.js';\nimport { sendPhotoData } from './data.js';\nimport { isEscEvent, clearFormField, showErrorMessage } from './util.js';\n\nconst PICTURE_FILE_TYPES = [\n  'jpg',\n  'jpeg',\n  'png',\n];\nconst WRONG_TYPE_ERROR_MESSAGE = 'Выбран неподходящий файл';\nconst ERROR_MESSAGE_DURATION = 1500;\nconst ERROR_BORDER_STYLE = '3px red solid';\n\nconst uploadForm = document.querySelector('#upload-select-image');\nconst uploadButtonNode = uploadForm.querySelector('#upload-file');\nconst uploadModalNode = uploadForm.querySelector('.img-upload__overlay');\nconst closeButtonNode = uploadModalNode.querySelector('#upload-cancel');\nconst mainNode = document.querySelector('main');\n\nconst resetUploadValue = () => {\n  uploadButtonNode.value = null;\n}\n\nconst reportValidationError = (field, string, borderStyle) => {\n  field.style.border = borderStyle;\n  field.setCustomValidity(string);\n  field.reportValidity();\n}\n\nconst reportNoValidationError = (field) => reportValidationError(field, '', null);\n\nconst isUploadFieldInFocus = (evt) => {\n  return (\n    evt.target === hashtagsFieldNode ||\n    evt.target === descriptionFieldNode\n  );\n}\n\nconst resetUploadSettings = () => {\n  resetScale();\n  resetPictureEffect();\n  removeSlider();\n  resetEffectRadioButtons();\n  resetUploadValue();\n  resetPicturePreview();\n  reportNoValidationError(hashtagsFieldNode);\n  reportNoValidationError(descriptionFieldNode);\n  clearFormField(hashtagsFieldNode);\n  clearFormField(descriptionFieldNode);\n}\n\nconst isPictureTypeMatch = (pictureName) => PICTURE_FILE_TYPES.some((fileType) => pictureName.endsWith(`.${fileType}`));\n\nconst onMessageOkayButtonClick = (messageNode) => {\n  return () => {\n    hideResultMessage(messageNode);\n  }\n}\n\nconst onMessageClick = (messageNode) => {\n  return () => {\n    hideResultMessage(messageNode);\n  }\n}\n\nconst onMessageInnerClick = (evt) => {\n  evt.stopPropagation();\n}\n\nconst onMessageEscKeydown = (messageNode) => {\n  return (evt) => {\n    if (isEscEvent(evt)) {\n      evt.preventDefault();\n\n      hideResultMessage(messageNode);\n    }\n  }\n}\n\nlet onMessageEscKeydownWrapper;\n\nconst hideResultMessage = (messageNode) => {\n  messageNode.remove();\n\n  document.removeEventListener('keydown', onMessageEscKeydownWrapper);\n}\n\nconst showResultMessage = (result) => {\n  return () => {\n    closeModal(uploadModalNode, closeButtonNode, 'upload');\n\n    const messageTemplateNode = document.querySelector(`#${result}`)\n      .content\n      .querySelector(`.${result}`);\n    const messageNode = messageTemplateNode.cloneNode(true);\n    const messageInnerNode = messageNode.querySelector(`.${result}__inner`);\n    const messageOkayButtonNode = messageNode.querySelector(`.${result}__button`);\n\n    onMessageEscKeydownWrapper = onMessageEscKeydown(messageNode);\n\n    messageOkayButtonNode.addEventListener('click', onMessageOkayButtonClick(messageNode));\n    messageNode.addEventListener('click', onMessageClick(messageNode));\n    messageInnerNode.addEventListener('click', onMessageInnerClick);\n    document.addEventListener('keydown', onMessageEscKeydownWrapper);\n\n    mainNode.appendChild(messageNode);\n  }\n}\n\nconst onUploadFormSubmit = (evt) => {\n  evt.preventDefault();\n\n  const uploadFormData = new FormData(uploadForm);\n\n  sendPhotoData(\n    showResultMessage('success'),\n    showResultMessage('error'),\n    uploadFormData,\n  );\n}\n\nconst onUploadButtonInput = () => {\n  const chosenPicture = uploadButtonNode.files[0];\n  const chosenPictureName = chosenPicture.name.toLowerCase();\n\n  if (!isPictureTypeMatch(chosenPictureName)) {\n    showErrorMessage(WRONG_TYPE_ERROR_MESSAGE, ERROR_MESSAGE_DURATION);\n    resetUploadValue();\n    return;\n  }\n\n  showPictureLoader();\n\n  loadChosenPicture(chosenPicture)\n    .then(() => {\n      hidePictureLoader();\n      openModal(uploadModalNode, closeButtonNode, 'upload');\n    });\n}\n\nuploadButtonNode.addEventListener('input', onUploadButtonInput);\n\nuploadForm.addEventListener('submit', onUploadFormSubmit);\n\nexport {\n  resetUploadSettings,\n  isUploadFieldInFocus,\n  reportValidationError,\n  reportNoValidationError,\n  ERROR_BORDER_STYLE,\n  uploadForm\n}\n","const COMMENTS_IN_PIECE = 5;\n\nconst commentsNode = document.querySelector('.social__comments');\nconst commentTemplateNode = document.querySelector('#comment')\n  .content\n  .querySelector('.social__comment');\nconst commentsLoaderButtonNode = document.querySelector('.comments-loader');\nconst shownCommentsCounterNode = document.querySelector('.shown-comments-count');\n\nlet shownComments = 0;\n\nconst createComment = ({ avatar, message, name }) => {\n  const commentNode = commentTemplateNode.cloneNode(true);\n  const commentAvatarNode = commentNode.querySelector('.social__picture');\n  const commentMessageNode = commentNode.querySelector('.social__text');\n\n  commentAvatarNode.src = avatar;\n  commentAvatarNode.alt = name;\n  commentMessageNode.textContent = message;\n\n  return commentNode;\n}\n\nconst clearComments = () => {\n  while (commentsNode.firstChild) {\n    commentsNode.firstChild.remove();\n  }\n\n  shownComments = 0;\n}\n\nconst onCommentsLoaderClick = (comments) => {\n  return () => {\n    renderPieceOfComments(comments);\n\n    if (comments.length === 0) {\n      hideCommentsLoader();\n    }\n  }\n}\n\nlet onCommentsLoaderClickWrapper;\n\nconst showCommentsLoader = () => {\n  commentsLoaderButtonNode.classList.remove('hidden');\n  commentsLoaderButtonNode.addEventListener('click', onCommentsLoaderClickWrapper);\n}\n\nconst hideCommentsLoader = () => {\n  commentsLoaderButtonNode.classList.add('hidden');\n  commentsLoaderButtonNode.removeEventListener('click', onCommentsLoaderClickWrapper);\n}\n\nconst updateShownCommentsCounter = () => {\n  shownCommentsCounterNode.textContent = shownComments;\n}\n\nconst getCommentsNumberInNextPiece = (remainingComments) => Math.min(COMMENTS_IN_PIECE, remainingComments.length)\n\nconst renderPieceOfComments = (comments) => {\n  const commentsNumberInPiece = getCommentsNumberInNextPiece(comments);\n\n  const commentsFragment = document.createDocumentFragment();\n\n  for (let i = 0; i < commentsNumberInPiece; i++) {\n    commentsFragment.appendChild(createComment(comments.shift()));\n\n    shownComments++;\n  }\n\n  commentsNode.appendChild(commentsFragment);\n\n  updateShownCommentsCounter();\n}\n\nconst renderComments = (comments) => {\n  const currentComments = comments.slice();\n  const commentsNumber = currentComments.length;\n\n  if (commentsNumber === 0) {\n    return;\n  }\n\n  renderPieceOfComments(currentComments);\n\n  if (commentsNumber > COMMENTS_IN_PIECE) {\n    onCommentsLoaderClickWrapper = onCommentsLoaderClick(currentComments);\n    showCommentsLoader();\n  }\n}\n\nexport {\n  renderComments,\n  clearComments,\n  hideCommentsLoader\n}\n","import { openModal } from './modal.js';\nimport { renderComments, clearComments, hideCommentsLoader } from './comments.js';\n\nconst bigPictureNode = document.querySelector('.big-picture');\nconst closeButtonNode = bigPictureNode.querySelector('#picture-cancel');\nconst imgNode = bigPictureNode.querySelector('.big-picture__img img');\nconst descriptionNode = bigPictureNode.querySelector('.social__caption');\nconst likesCounterNode = bigPictureNode.querySelector('.likes-count');\nconst commentsCounterNode = bigPictureNode.querySelector('.comments-count');\n\nconst renderBigPicture = ({ url, likes, comments, description }) => {\n  imgNode.src = url;\n  likesCounterNode.textContent = likes;\n  commentsCounterNode.textContent = comments.length;\n  descriptionNode.textContent = description;\n}\n\nconst setPicturesListeners = (picturesData) => {\n  const pictures = document.querySelectorAll('.picture');\n\n  pictures.forEach((pictureNode, index) => {\n    pictureNode.addEventListener('click', () => {\n      openModal(bigPictureNode, closeButtonNode);\n      renderBigPicture(picturesData[index]);\n      hideCommentsLoader();\n      clearComments();\n      renderComments(picturesData[index].comments);\n    });\n  });\n}\n\nexport {\n  setPicturesListeners\n}\n","import { setPicturesListeners } from './big-picture.js';\n\nconst picturesNode = document.querySelector('.pictures');\nconst pictureTemplateNode = document.querySelector('#picture')\n  .content\n  .querySelector('.picture');\n\nconst renderPictures = (pictures) => {\n  const picturesFragment = document.createDocumentFragment();\n\n  pictures.forEach(({ url, likes, comments }) => {\n    const pictureNode = pictureTemplateNode.cloneNode(true);\n\n    pictureNode.querySelector('.picture__img').src = url;\n    pictureNode.querySelector('.picture__likes').textContent = likes;\n    pictureNode.querySelector('.picture__comments').textContent = comments.length;\n\n    picturesFragment.appendChild(pictureNode);\n  });\n\n  picturesNode.appendChild(picturesFragment);\n}\n\nconst clearPictures = () => {\n  const pictures = picturesNode.querySelectorAll('.picture');\n\n  pictures.forEach((picture) => {\n    picture.remove();\n  });\n}\n\nconst updatePictures = (pictures) => {\n  clearPictures();\n  renderPictures(pictures);\n  setPicturesListeners(pictures);\n}\n\nexport {\n  renderPictures,\n  updatePictures\n}\n","/* global _:readonly */\n\nimport { updatePictures } from './gallery.js';\n\nconst SIZE_OF_RANDOM_GALLERY = 10;\n\nconst sortButtonsNode = document.querySelector('.img-filters');\nconst sortButtonActiveClassName = 'img-filters__button--active';\n\nconst showSortButtons = () => {\n  sortButtonsNode.classList.remove('img-filters--inactive');\n}\n\nconst sortGalleryByDefault = (pictures) => {\n  updatePictures(pictures);\n}\n\nconst sortGalleryRadnomly = (pictures) => {\n  const sortedPictures = _.shuffle(pictures.slice())\n    .slice(0, SIZE_OF_RANDOM_GALLERY);\n\n  updatePictures(sortedPictures);\n}\n\nconst getPictureCommentsCount = (picture) => picture.comments.length;\n\nconst comparePicturesByComments = (pictureA, pictureB) => {\n  const commentsCountA = getPictureCommentsCount(pictureA);\n  const commentsCountB = getPictureCommentsCount(pictureB);\n\n  return commentsCountB - commentsCountA;\n}\n\nconst sortGalleryByComments = (pictures) => {\n  const sortedPictures = pictures\n    .slice()\n    .sort(comparePicturesByComments);\n\n  updatePictures(sortedPictures);\n}\n\nconst sortOrders = {\n  'default': sortGalleryByDefault,\n  'random': sortGalleryRadnomly,\n  'discussed': sortGalleryByComments,\n}\n\nlet currentSortOrder = Object.keys(sortOrders)[0];\n\nconst sortGallery = (sortOrder, pictures) => sortOrders[sortOrder](pictures);\n\nconst getSortButtonSelector = (sortOrder) => `#filter-${sortOrder}`;\n\nconst setSortButtonActiveClass = (activeSortButtonNode, sortOrder) => {\n  const previousSortButtonNode = document.querySelector(getSortButtonSelector(currentSortOrder));\n  previousSortButtonNode.classList.remove(sortButtonActiveClassName);\n\n  currentSortOrder = sortOrder;\n\n  activeSortButtonNode.classList.add(sortButtonActiveClassName);\n}\n\nconst setSortButtonsListeners = (cb) => {\n  for (const sortOrder of Object.keys(sortOrders)) {\n    const sortButtonNode = document.querySelector(getSortButtonSelector(sortOrder));\n\n    sortButtonNode.addEventListener('click', (evt) => {\n      if (!sortButtonNode.classList.contains(sortButtonActiveClassName)) {\n        evt.preventDefault();\n\n        setSortButtonActiveClass(sortButtonNode, sortOrder);\n\n        cb(sortOrder);\n      }\n    });\n  }\n}\n\nexport {\n  showSortButtons,\n  sortGallery,\n  setSortButtonsListeners\n}\n","/* global _:readonly */\n\nimport './upload-picture.js';\nimport './scale.js';\nimport './effects.js';\nimport './hashtags-validation.js';\nimport './description-validation.js';\nimport { getPhotosData } from './data.js';\nimport { renderPictures } from './gallery.js';\nimport { setPicturesListeners } from './big-picture.js';\nimport { showSortButtons, setSortButtonsListeners, sortGallery } from './sort.js';\n\nconst UPDATE_DELAY = 500;\n\ngetPhotosData((pictures) => {\n  renderPictures(pictures);\n  setPicturesListeners(pictures);\n\n  showSortButtons();\n  setSortButtonsListeners(\n    _.debounce(\n      (order) => sortGallery(order, pictures),\n      UPDATE_DELAY),\n  );\n});\n"],"sourceRoot":""}